generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  MEMBER
}

enum Languages {
  PTBR
  ENUS
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  langugage     Languages @default(PTBR)
  password      String?
  image         String?
  role          UserRole  @default(MEMBER)

  account   Account[]
  session   Session[]
  debts     Debt[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Debt {
  id      String     @id @default(uuid())
  title   String
  value   Float
  dueDate DateTime
  status  DebtStatus

  user_id String

  observations String?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  user         User      @relation(fields: [user_id], references: [id])

  @@map("debts")
}

enum DebtStatus {
  PENDING
  PAID
  LATE
}
